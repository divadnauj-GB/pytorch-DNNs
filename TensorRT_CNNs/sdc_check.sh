#!/bin/bash
#
# Copyright 2020, NVIDIA CORPORATION.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# 

##################################################################################
# Brief explanation of the log files:
# (1) diff.log: If the program generates a separate output file (e.g.,
# output.txt), diff the file with the golden output file and store the diff in
# diff.log. The program output should be deterministic. Please exclude
# non-deterministic values  (e.g., runtimes) from the file before you use
# `diff` or similar utilities.
# (2) stdout_diff.log: diff stdout generated by the program with # the golden
# stdout and store it in stdout_diff.log. Remove the string that matches
# ":::Injecting.*:::" from the stdout.
# (3) stderr_diff.log: diff stderr generated by the program with the golden
# stderr and store it in stderr_diff.log.  
# (4) special_check.log: if the application specific check fails, the
# special_check.log should contain some non-empty string.
#
# If the user prefers to skip one of these checks, he/she should create an
# empty log file (e.g., touch diff.log). 
##################################################################################

# if your program creates an output file (e.g., output.txt) compare it to the file created just now and store the difference in diff.log
# Example: diff output.txt ${APP_DIR}/golden_output.txt > diff.log

APP_ARGS=$*
NEW_VAR=("$@")
#source ~/miniconda3/etc/profile.d/conda.sh
#conda activate Pytorch_nvbitPERfi

for ((idx=0; idx<${#NEW_VAR[@]}; ++idx))
    do  
        case "${NEW_VAR[idx]}" in

        "-t")
            TYPE="${NEW_VAR[idx+1]}"
            ;;

        "-n")
            NAME="${NEW_VAR[idx+1]}"
            ;;

        "-ln")
            NUM="${NEW_VAR[idx+1]}"
            ;;

        *)
        ;;
        esac
    done

if [ -f ${APP_DIR}/${TYPE}/${NAME}/Outputs_DNN.h5 ]; then
    diff ${APP_DIR}/${TYPE}/${NAME}/Golden_Outputs_DNN.h5 ${APP_DIR}/${TYPE}/${NAME}/Outputs_DNN.h5 > diff.log 
else
    touch diff.log
fi

cp ${APP_DIR}/golden_stderr.txt golden_stderr.txt
cp ${APP_DIR}/golden_stdout.txt golden_stdout.txt

sed -i '/[TRT]/d' stdout.txt
sed -i '/[TRT]/d' golden_stdout.txt

# comparing stdout generated by your program
diff stdout.txt golden_stdout.txt > stdout_diff.log

# comparing stderr generated by your program
diff stderr.txt golden_stderr.txt > stderr_diff.log

# Application specific output: The following check will be performed only if at least one of diff.log, stdout_diff.log, and stderr_diff.log is different

#cp diff.log special_check.txt 

if [ -s diff.log ]; then
    python ${APP_DIR}/sdc_check.py ${APP_ARGS} > special_check.txt 
else
    touch special_check.txt
fi

